Java的内存需要划分成为5个部分：
    1、栈（Stack）：存放的都是方法中的局部变量。方法的运行一定要在栈当中
        局部变量：方法的参数，或者是方法{}内部的变量
        作用域：一旦超出作用域，立刻从栈内存中消失。
    2、堆（Heap）：凡是new出来的东西，都在堆当中。
        堆内存里面的东西都有一个地址值：16进制
        堆内存里面的数据，都有默认值。规则：
            整数          默认为0
            浮点数        默认为0.0
            字符          默认为'\u0000'
            布尔          默认为false
            引用类型      默认为null
    3、方法区（Method Area）：存储.class相关信息，包含方法的信息

    4、本地方法栈（Native Method Stack）：与操作系统相关。
    5、寄存器（pc Register）：与CPU相关。

一个数组中的内存逻辑：
        程序运行时，先把.class保存在方法区里面，.class空间里面有对应的属性、方法等信息。执行main方法时，
    会在栈内存中开辟一个main方法的内存空间，里面存放的都是main方法中的局部变量。而方法new出来的东西，
    会在堆内存中保存这个new出来的对象，这个对象参照.class空间也有对应的属性之类的东西，
    而这个对象的内存地址值会保存到栈内存中对应声明的局部变量中，当操作这个变量时会通过这个
    内存地址值去堆内存中找到这个对象。

ArrayIndexOutOfBoundsException  数组索引越界异常
NullPointerException            空指针异常

所有的引用类型变量，都可以赋值为一个null值，但是代表其中什么都没有。

